state:
  name: "Production-Ready System"
  track: "milestone"
  category: "baseline"
  feature: "production-readiness"
  milestone: true
  parent_state: "milestone/v2.0-modern-devex"
  difficulty: "intermediate"
  duration_estimate: "3-4 hours"
  prerequisites:
    - "docker-compose-familiarity"
    - "kubernetes-basics"
    - "sql-database-concepts"

description: |
  This milestone transforms TraderX into a production-ready application, including:
  - Replacing the educational H2 in-memory database with PostgreSQL.
  - OAuth2 authentication
  - Full observability stack
  - Redis caching
  - PostgreSQL with HA

  These changes align with the project's goal of demonstrating realistic microservices
  architecture patterns and provides a foundation for advanced features.

changes:
  - component: "database"
    type: "modified"
    description: "Replaced H2 in-memory database with PostgreSQL 15 (Alpine); updated Dockerfile to use official postgres:15-alpine image"
  - component: "database/initialSchema.sql"
    type: "modified"
    description: "Migrated schema to PostgreSQL-compatible syntax with proper CASCADE, sequences, and timestamp handling"
  - component: "database/run.sh"
    type: "removed"
    description: "Removed custom H2 startup script; PostgreSQL container handles initialization automatically"
  - component: "account-service"
    type: "modified"
    description: "Updated dependencies and configuration for PostgreSQL JDBC driver and dialect"
  - component: "position-service"
    type: "modified"
    description: "Updated dependencies and configuration for PostgreSQL JDBC driver and dialect"
  - component: "trade-service"
    type: "modified"
    description: "Updated build configuration for PostgreSQL compatibility"
  - component: "trade-processor"
    type: "modified"
    description: "Updated dependencies and configuration for PostgreSQL JDBC driver and dialect"
  - component: "docker-compose.yml"
    type: "modified"
    description: "Configured PostgreSQL service with persistent volume (postgres_data) and updated all service environment variables"
  - component: "gitops/base/database"
    type: "modified"
    description: "Updated Kubernetes deployment and service configurations for PostgreSQL (single replica, port 5432)"
  - component: "radius-traderx"
    type: "modified"
    description: "Added custom PostgreSQL resource type, Bicep and Terraform recipes for managed database deployment"
  - component: "documentation"
    type: "modified"
    description: "Revised README and database documentation to reflect PostgreSQL connection details and port changes (5432)"

learning_objectives:
  - "Understand database migration from in-memory to persistent storage"
  - "Learn PostgreSQL configuration and deployment in containerized environments"
  - "Experience database schema migration and SQL dialect differences"
  - "Configure Spring Boot applications with PostgreSQL"
  - "Understand production database connectivity patterns in microservices"
  - "Deploy and manage PostgreSQL using Radius with custom resource recipes"

validation:
  tests:
    - "PostgreSQL database starts successfully in Docker Compose"
    - "Database schema initializes correctly from initialSchema.sql"
    - "All Spring Boot services connect to PostgreSQL successfully"
    - "Data persists across container restarts using postgres_data volume"
    - "Account service can query and validate accounts from PostgreSQL"
    - "Position service retrieves positions and trades from PostgreSQL"
    - "Trade processor writes trade data to PostgreSQL successfully"
    - "Trade flow works end-to-end with PostgreSQL backend"
    - "Web UI accessible at http://localhost:8080 with PostgreSQL data"
    - "Kubernetes deployment creates PostgreSQL pod successfully"
    - "Radius deployment provisions PostgreSQL using custom recipe"
    - "PostgreSQL connection accessible on port 5432"
    - "Foreign key constraints and relationships work correctly"

maintenance:
  last_updated: "2025-10-15"
  next_review: "2026-01-15"
  dependencies_status: "current"
